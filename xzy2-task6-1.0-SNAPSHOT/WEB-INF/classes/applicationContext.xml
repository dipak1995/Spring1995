<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">


    <!--spring配置文件： 声明service，dao，工具类等对象-->

<!--    <context:property-placeholder location="classpath:jdbc.properties" />-->
<!--    <context:property-placeholder location="classpath:redis.properties" />-->

    <bean id="PropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <!--读取src目录的db.properties文件-->
                <value>classpath:jdbc.properties</value>
                <!--读取src目录的redis-config.properties文件-->
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>


    <!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->
<!--    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">-->
<!--    <property name="caches">-->
<!--        <set>-->
<!--            &lt;!&ndash; 这里可以配置多个redis &ndash;&gt;-->
<!--            &lt;!&ndash; <bean class="com.cn.util.RedisCache">  -->
<!--                 <property name="redisTemplate" ref="redisTemplate" />  -->
<!--                 <property name="name" value="default"/>  -->
<!--            </bean> &ndash;&gt;-->
<!--            <bean class="org.zgr.pack.util.RedisCache">-->
<!--                <property name="redisTemplate" ref="redisTemplate" />-->
<!--                <property name="name" value="common"/>-->
<!--                &lt;!&ndash; common名称要在类或方法的注解中使用 &ndash;&gt;-->
<!--            </bean>-->
<!--        </set>-->
<!--    </property>-->
<!--    </bean>-->


    <!--设置连接池-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.testOnReturn}" />
    </bean>
    <!--设置链接属性-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}"
          p:port="${redis.port}"
          p:password=""
          p:pool-config-ref="poolConfig"
          p:timeout="100000"/>

    <bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>


    <!-- Jedis模板配置  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
        <property name="valueSerializer" ref="jdkSerializationRedisSerializer"></property>
    </bean>

    <!--声明数据源，连接数据库-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--SqlSessionFactoryBean创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation"  value="classpath:mybatis.xml" />
    </bean>
    
    <!--声明mybatis的扫描器，创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.ptt.dao" />
    </bean>

    <!-- 引入到spring配置文件中 redisContent.xml -->
<!--    <import resource="redisContent.xml"/>-->

    <!--声明service的注解@Service所在的包名位置-->
    <context:component-scan base-package="com.ptt.*" />

    <!--事务配置：注解的配置， aspectj的配置-->
</beans>